AWSTemplateFormatVersion: 2010-09-09
Description: >-
  alexa-gpt

Transform:
- AWS::Serverless-2016-10-31

Resources:

  ChatGPTDependenciesLayers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nodejs-alexagpt
      Description: node modules with all dependencies
      ContentUri: "./layers"
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: nodejs18.x

  RestApiChatGPT:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: chatgpt-api
      Auth:
        ApiKeyRequired: true

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: ChatGPTApiKey
      Enabled: true

  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties: 
      ApiStages: 
        - ApiId: !Ref RestApiChatGPT
          Stage: !Ref RestApiChatGPTProdStage

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

  ChatGPT:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: chatgpt
      CodeUri: "../build"
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Layers:
       - !Ref ChatGPTDependenciesLayers
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Alexa with Chat GPT
      Environment:
        Variables:
          OPENAI_API_KEY: "{{resolve:secretsmanager:openai/chatgpt:SecretString:token}}"
          GOOGLE_API_KEY: "{{resolve:secretsmanager:openai/chatgpt:SecretString:googleApiKey}}"
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref RestApiChatGPT
            Path: /
            Method: POST
            Auth: 
              ApiKeyRequired: true


Outputs:
  ChatGPTEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${RestApiChatGPT}.execute-api.${AWS::Region}.amazonaws.com/Prod"